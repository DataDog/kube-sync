apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: kube-sync
  namespace: argo
spec:
  entrypoint: kube-sync
  templates:
  - name: kube-sync
    dag:
      tasks:
      - name: permissions
        template: permissions

      - name: configmap
        template: configmap

      - name: deployment
        dependencies:
        - configmap
        - permissions
        template: deployment

      - name: assert
        dependencies:
        - deployment
        template: assert

  - name: configmap
    steps:
    - - name: configmap-v1
        template: configmap-v1

  - name: permissions
    steps:
    - - name: serviceaccount
        template: serviceaccount
      - name: clusterrole
        template: clusterrole

    - - name: clusterrolebinding
        template: clusterrolebinding

  - name: deployment
    steps:
    - - name: deploy
        template: deploy

  - name: assert
    steps:
    - - name: assert-v1
        template: assert-v1

    - - name: namespace-v2
        template: namespace-v2
      - name: configmap-v2
        template: configmap-v2

    - - name: assert-v2
        template: assert-v2

  - name: configmap-v1
    resource:
      action: apply
      manifest: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          namespace: kube-system
          name: to-sync
        data:
          foo: one

  - name: configmap-v2
    resource:
      action: apply
      manifest: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          namespace: kube-system
          name: to-sync
        data:
          foo: one
          bar: two

  - name: serviceaccount
    resource:
      action: apply
      manifest: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: kube-sync
          namespace: kube-system

  - name: clusterrole
    resource:
      action: apply
      manifest: |
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: kube-sync
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - list

  - name: clusterrolebinding
    resource:
      action: apply
      manifest: |
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: kube-sync
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: kube-sync
        subjects:
        - kind: ServiceAccount
          name: kube-sync
          namespace: kube-system

  - name: deploy
    resource:
      action: apply
      manifest: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: kube-sync
          namespace: kube-system
          labels:
            app: kube-sync
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: kube-sync
          template:
            metadata:
              labels:
                app: kube-sync
            spec:
              serviceAccount: kube-sync
              containers:
              - name: kube-sync
                image: quay.io/julienbalestra/kube-sync:master
                command:
                - /usr/local/bin/kube-sync
                - kube-system # namespace
                - to-sync # configmap name
                - --sync-interval=10s # use a higher value in real life
                - --prometheus-exporter-bind=0.0.0.0:8484
                - -v=1
                livenessProbe:
                  httpGet:
                    path: /metrics
                    port: 8484
                  initialDelaySeconds: 60
                  periodSeconds: 20
                readinessProbe:
                  httpGet:
                    path: /metrics
                    port: 8484
                  initialDelaySeconds: 45
                resources:
                  requests:
                    memory: "128Mi"
                    cpu: "100m"
                  limits:
                    memory: "128Mi"
                    cpu: "100m"

  - name: assert-v1
    resource:
      action: create
      successCondition: status.succeeded > 0
      failureCondition: status.failed > 3
      manifest: |
        apiVersion: batch/v1
        kind: Job
        metadata:
          generateName: assert-1-
          namespace: argo
        spec:
          template:
            metadata:
              name: assert
            spec:
              containers:
              - name: echo
                image: busybox:latest
                command:
                - /bin/echo
                - $(FOO)
                env:
                - name: FOO
                  valueFrom:
                    configMapKeyRef:
                      name: to-sync
                      key: foo
              restartPolicy: Never
          backoffLimit: 3

  - name: namespace-v2
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: Namespace
        metadata:
          name: assert-2

  - name: assert-v2
    resource:
      action: create
      successCondition: status.succeeded > 0
      failureCondition: status.failed > 3
      manifest: |
        apiVersion: batch/v1
        kind: Job
        metadata:
          generateName: assert-2-
          namespace: assert-2
        spec:
          template:
            metadata:
              name: assert
            spec:
              containers:
              - name: echo
                image: busybox:latest
                command:
                - /bin/echo
                - $(FOO)
                - $(BAR)
                env:
                - name: FOO
                  valueFrom:
                    configMapKeyRef:
                      name: to-sync
                      key: foo
                - name: BAR
                  valueFrom:
                    configMapKeyRef:
                      name: to-sync
                      key: bar
              restartPolicy: Never
          backoffLimit: 3
